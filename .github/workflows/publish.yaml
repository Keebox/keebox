name: 'Publish service image'

on: [workflow_dispatch]

env:
  BACKEND_DIRECTORY: src/backend
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

jobs:
  run_integration_tests:
    runs-on: ubuntu-latest
    name: 'Run integration tests'

    services:
      postgres:
        image: postgres:alpine
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: keebox_db
        ports:
          - 5432:5432

    steps:
      - name: Checkout project
        uses: actions/checkout@v2

      - name: Setup dotnet
        uses: actions/setup-dotnet@v1
        with:
          dotnet-version: 5.0.x

      - name: Run integration tests
        run: dotnet test ${{ env.BACKEND_DIRECTORY }} --filter "TestCategory~Integration"

  increment_version:
    runs-on: ubuntu-latest
    name: 'Increase release number'

    needs:
      - run_integration_tests

    steps:
      - name: Checkout project
        uses: actions/checkout@v2

      - name: Increment build number
        uses: keebox/update-assembly-version@v0.15
        with:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          assembly-file: ${{ env.BACKEND_DIRECTORY }}/ProductSettings.cs
          increase-build: false
          increase-release: true

  publish_images:
    runs-on: ubuntu-latest
    name: 'Publish service image'

    needs:
      - increment_version

    steps:
      - name: Checkout project
        uses: actions/checkout@v2

      - name: Extract version
        run: |
          temp_version=$( cat ${{ env.BACKEND_DIRECTORY }}/ProductSettings.cs | grep -oP '(?<=AssemblyVersion\(\")[\d\w-\.]*(?=\")' );
          echo "VERSION=$temp_version" >> $GITHUB_ENV;

      - name: Log to container registry
        uses: docker/login-action@v1
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and push secret service
        uses: docker/build-push-action@v2
        with:
          push: true
          file: ${{ env.BACKEND_DIRECTORY }}/SecretsService/Dockerfile
          context: ${{ env.BACKEND_DIRECTORY }}
          tags: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:latest,${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${{ env.VERSION }}
