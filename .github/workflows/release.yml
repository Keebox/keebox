name: Release

on:
  workflow_dispatch:
    inputs:
      major:
        description: 'Whether to release major'
        default: 'false'
        required: false
      minor:
        description: 'Whether to release minor'
        default: 'false'
        required: false
      tag:
        description: 'Tag that will be added to release'
        required: false

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

jobs:
  unit_tests:
    name: Run unit tests
    uses: keebox/keebox/.github/workflows/unit.yml@master

  integration_tests:
    name: Run integration tests
    uses: keebox/keebox/.github/workflows/integration.yml@master

  release:
    name: 'Build and publish docker image, release'
    needs:
      - unit_tests
      - integration_tests
    runs-on: ubuntu-latest

    steps:
      - name: Checkout project
        uses: actions/checkout@v2

      - name: Update version
        id: assembly_version
        uses: keebox/update-assembly-version@v0.18
        with:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          assembly-file: src/ProductSettings.cs
          increase-major: ${{ github.event.inputs.major }}
          increase-minor: ${{ github.event.inputs.minor }}
          increase-build: true
          tag: ${{ github.event.inputs.tag }}
          make-commit: false

      - name: Set channel
        id: channel
        run: |
          if [ ${{ github.event.inputs.minor }} == true ] || [ ${{ github.event.inputs.major }} == true ];
            then channel='latest';
            else channel='unstable';
          fi

          echo "::set-output name=channel::${channel}"

      - name: Log to container registry
        uses: docker/login-action@v1
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and push secret service
        uses: docker/build-push-action@v2
        with:
          push: true
          file: src/Dockerfile
          context: src
          tags: |
            ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${{ steps.assembly_version.outputs.new-version }}
            ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${{ steps.channel.outputs.channel }}

      - name: Create release
        uses: marvinpinto/action-automatic-releases@latest
        with:
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          automatic_release_tag: ${{ steps.assembly_version.outputs.new-version }}
          title: Release ${{ steps.assembly_version.outputs.new-version }}
          draft: true
          prerelease: false
